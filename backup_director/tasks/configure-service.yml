# ------------------------------------------------------------------------------
# backup_director/tasks/configure-service.yml
# ------------------------------------------------------------------------------

---

- name: Give members of the bacula group access to the bacula home folder
  ansible.builtin.file:
    path: /var/lib/bacula
    mode: u=rwx,g=rx,o=
  become: yes

- name: >-
    Find all the Bacula FileSet files that are provided for roles in this
    roles library
  local_action:
    module: ansible.builtin.find
    paths: [ "{{ role_path }}/.." ]
    patterns: [ "bacula-fileset.conf" ]
    recurse: yes
  register: fileset_find_result

- set_fact:
    fileset_files: "{{ fileset_find_result.files | map(attribute='path') }}"

# The backup director is configured to backup one of:
# 1. Hosts in the inventory group backup_clients.
# 2. All hosts apart from those in the inventory group backup_exceptions.
# 3. All hosts.
#
# Either backup_clients or backup_exceptions or neither should be configured as
# inventory groups. It's not valid for both backup_clients and backup_exceptions
# to be configured as inventory groups.
#
# The backup_client role must be allocated in plays that match the following
# host patterns in those three scenarios:
# 1. backup_clients
# 2. all:!backup_exceptions
# 3. all

- name: >-
    Derive hosts in backup_clients and backup_exceptions inventory groups
  ansible.builtin.set_fact:
    backup_clients: "\
      {{ groups['backup_clients'] | default('[]') }}"
    backup_exceptions: "\
      {{ groups['backup_exceptions'] | default('[]') }}"

- name: >-
    Fail if there are hosts in both backup_clients and backup_exceptions
    inventory groups
  ansible.builtin.fail:
    msg: >-
      It's not valid to have both backup_clients and backup_exceptions
      groups in your inventory
  when: backup_clients | length > 0 and backup_exceptions | length > 0

- block:

    - name: Template bacula-dir.conf
      ansible.builtin.template:
        src: bacula-dir.conf.j2
        dest: /etc/bacula/bacula-dir.conf
        owner: root
        group: bacula
        mode: 0640
      vars:
        # hostnames = the hosts to be backup up - see above.
        hostnames: |-
          {% if backup_clients | length > 0 %}
          {{ backup_clients }}
          {% elif backup_exceptions | length > 0 %}
          {{ query('inventory_hostnames', 'all:!backup_exceptions') }}
          {% else %}
          {{ query('inventory_hostnames', 'all') }}
          {% endif %}
      notify: Bacula director configuration changed

    - name: Create folder to hold filesets for roles
      ansible.builtin.file:
        path: /etc/bacula/role-filesets
        state: directory
        owner: root
        group: bacula
        mode: 0750

    - name: Copy role snippets for inclusion in client specific filesets
      # Copy files/bacula-fileset.conf files within roles to the role-filesets/
      # directory within the Bacula configuration directory. Name the files
      # role_name.conf at the destination.
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ '/etc/bacula/role-filesets/' + role + '.conf' }}"
      vars:
        role: >-
          {{
            item | regex_search('(\w+)/files/bacula-fileset\.conf$', '\1') |
            first
          }}
      loop: "{{ fileset_files }}"
      notify: Bacula director configuration changed

    - name: Determine if a folder has been created for Dropbox integration
      ansible.builtin.stat:
        path: /var/lib/bacula/Dropbox
      register: dropbox_dir

    - name: >-
        Ensure the Bootstrap folder is present in the Dropbox folder if the
        Dropbox folder exists
      ansible.builtin.file:
        path: /var/lib/bacula/Dropbox/{{ backup_copy_folder }}/Bootstrap
        state: directory
        owner: bacula
        group: bacula
      when: dropbox_dir.stat.exists and dropbox_dir.stat.isdir

    - name: >-
        Ensure the Bootstrap folder is present directly in the bacula home
        directory if the Dropbox folder doesn't exist
      ansible.builtin.file:
        path: /var/lib/bacula/Bootstrap
        state: directory
        owner: bacula
        group: bacula
      when: not dropbox_dir.stat.exists

    - name: Copy the bacula catalog queries file to the director host
      ansible.builtin.copy:
        src: query.sql
        dest: /etc/bacula/scripts/query.sql

  become: yes
